# C-b was chosen because tmux was developped in screen
# C-b is not acceptable -- Vim uses it??
set-option -g prefix C-a

# C-a, C-a for last active window
bind-key C-a last-window

# Allows for faster key repetition
set -s escape-time 0

set-option -g default-shell "/bin/bash"
# set-option -g default-command bash
# https://github.com/tmux/tmux/wiki/Getting-Started#key-bindings
# bind-key a last-window # `C-b a` for last-window command

# changes the default key bindings to add the -c flag to specify the working directory
# https://github.com/tmux/tmux/wiki/Recipes#create-new-panes-in-the-same-working-directory
# bind '"' split-window -c "#{pane_current_path}"
# bind % split-window -hc "#{pane_current_path}"
# bind c new-window -c "#{pane_current_path}"

# Send Up and Down keys for the mouse wheel
# set -g mode-mouse on ???
# https://github.com/tmux/tmux/wiki/Recipes#send-up-and-down-keys-for-the-mouse-wheel
# bind -n WheelUpPane if -Ft= "#{mouse_any_flag}" "send -M" "send Up"
# bind -n WheelDownPane if -Ft= "#{mouse_any_flag}" "send -M" "send Down"

# Windows
# setw -g aggressive-resize on
set -g window-size largest

# Find Window
# https://man.openbsd.org/tmux#find-window
# https://man.openbsd.org/tmux#command-prompt
# Why C-p, C-p is the binding for find project in idea
bind-key -n C-p command-prompt "find-window %1"

# Tab like window handling
# https://wiki.archlinux.org/title/Tmux#Use_tmux_windows_like_tabs
bind-key -n S-right next
bind-key -n S-left prev
# Browser tab binding
bind-key -n C-t new-window
bind-key -n C-F4 kill-window
# Tab is a pain: https://stackoverflow.com/questions/15470001/bind-ctrltab-and-ctrlshifttab-in-tmux
# bind -n C-Tab next
# bind -n C-S-Tab prev


# Vi Key binding
# https://github.com/tmux/tmux/wiki/Getting-Started#vi1-key-bindings
# If either of the VISUAL or EDITOR environment variables
# are set to something containing vi (such as vi, vim, nvim) when the tmux server is first started, both of these options are set to vi.
# set -g mode-keys vi
# set -g status-keys vi
