#!/bin/bash
# Troubleshooting Service Monitor
# Based on https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/troubleshooting.md

# The log and error handling
# We still need to use the set command
# because shellcheck does not see them and want use to add
# exit check everywhere
set -Eeuo pipefail
# echo and error_handling should be in your bashrc.d directory


# Check if URL is provided
if [ -z "$1" ]; then
    echo "Usage: $0 <app-name>"
    exit 1
fi

APP_NAME=$1

################################################################################
# Check if the Service Monitor selects a service
################################################################################
echo Getting Service Monitor Namespace for the App "$APP_NAME"
APP_LABEL="app.kubernetes.io/name=$APP_NAME"
# the name label as seen here: https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/
# label app.kubernetes.io/name=prometheus
read -r SERVICE_MONITOR_NAME SERVICE_MONITOR_NAMESPACE <<< "$(kubectl get servicemonitor -o custom-columns=NAME:.metadata.name,NAMESPACE:.metadata.namespace --no-headers -l "$APP_LABEL" -A)"

if [ -z "$SERVICE_MONITOR_NAME" ]; then
    echo "Error: No service monitor found for app label: $APP_LABEL"
    echo "  Is the app name correct?: $APP_NAME"
    exit 1
fi
echo "Service monitor found: $SERVICE_MONITOR_NAMESPACE/$SERVICE_MONITOR_NAME"

# shellcheck disable=SC2016
SERVICE_MONITOR_LABEL_SELECTOR=$(kubectl get servicemonitors -n "$SERVICE_MONITOR_NAMESPACE" "$SERVICE_MONITOR_NAME" -o template='{{ $first := 1 }}{{ range $key, $value := .spec.selector.matchLabels }}{{ if eq $first 0 }},{{end}}{{ $key }}={{ $value }}{{ $first = 0 }}{{end}}')
if [ -z "$SERVICE_MONITOR_LABEL_SELECTOR" ]; then
    echo "Error: No service monitor label selector found on the service monitor: $SERVICE_MONITOR_NAMESPACE/$SERVICE_MONITOR_NAME"
    exit 1
fi
echo "Service monitor label selector found: $SERVICE_MONITOR_LABEL_SELECTOR"
TARGET_SERVICE=$(kubectl get services -l "$SERVICE_MONITOR_LABEL_SELECTOR" -A)
if [ -z "$TARGET_SERVICE" ]; then
    echo "Error: No service could be found with the label selector $SERVICE_MONITOR_LABEL_SELECTOR found on the service monitor: $SERVICE_MONITOR_NAMESPACE/$SERVICE_MONITOR_NAME"
    exit 1
fi

################################################################################
# Prometheus Server Info
################################################################################
# The name of the Prometheus object in the Prometheus CRD
PROMETHEUS_OBJECT_NAME=prometheus
# Where is the Prometheus object located?
PROMETHEUS_OBJECT_NAMESPACE=kube-prometheus
# The secret name where the configuration of the Prometheus Server is stored
PROMETHEUS_SECRET_NAME="prometheus-$PROMETHEUS_OBJECT_NAME"

################################################################################
# Has my Service Monitor been seen by Prometheus?
################################################################################
# https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/troubleshooting.md#has-my-servicemonitor-been-picked-up-by-prometheus
# ServiceMonitor objects and the namespace where they belong are selected by the serviceMonitorSelector and serviceMonitorNamespaceSelector of a Prometheus object.
# The name of a ServiceMonitor is encoded in the Prometheus configuration, so you can simply grep whether it is present there.
CONFIG=$(kubectl -n "$PROMETHEUS_OBJECT_NAMESPACE"  get secret "$PROMETHEUS_SECRET_NAME" -o json | jq -r '.data["prometheus.yaml.gz"]' | base64 -d | gunzip)
if ! echo "$CONFIG" | grep "$SERVICE_MONITOR_NAME" >/dev/null; then
  echo "Service Monitor not picked by the Prometheus Server"
  echo ""
  echo "Actions:"
  echo "  * check the Prometheus Operator log"
  echo "     The prometheus operator may have problem creating the configuration file"
  echo "     Example: prometheus/prometheus failed: creating config failed: remote write 1: failed to get authorization token of type \"bearer\": unable to get secret \"prometheus-bearer\": secrets \"prometheus-bearer\" not found"
  echo "  * Check the serviceMonitorSelector and serviceMonitorNamespaceSelector of the Prometheus object"
  echo "     Why? The selector are too restrictive"
  echo "     ServiceMonitor objects and the namespace are selected by the serviceMonitorSelector and serviceMonitorNamespaceSelector"
  exit 1
fi
echo "Service Monitor $SERVICE_MONITOR_NAME found in the Prometheus Config file"

echo "Service Monitor should work."
echo ""
echo " If not check the logs for any configuration/scrape problem"
echo "   kube-logs $PROMETHEUS_OBJECT_NAME"



