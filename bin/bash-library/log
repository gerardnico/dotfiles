#!/bin/bash

##########################################
# Standard/Library function
##########################################
CLI_NAME=$(basename "$0") # Name of the cli

# Echo a message
function echo_log() {

  echo -e "$CLI_NAME: ${1:-}"

}

# Print the error message $1
function echo_err() {
  RED='\033[0;31m'
  NC='\033[0m' # No Color
  #(>&2 echo -e "${RED}$1${NC}")
  echo_log "${RED}$1${NC}"
}

if [[ "${DOKU_DOCKER_STRICT}" != "false" ]]; then
  # flag
  # e - Exit if any error
  # u - Treat unset variables as an error when substituting
  # o pipefail - the return value of a pipeline is the status of the last command to exit with a non-zero status or zero if no command exited with a non-zero status
  # E - the ERR trap is inherited by shell functions
  set -Eeuo pipefail
  echo_log "Strict Mode"
else
  echo_log "Non-Strict Mode"
fi;

## A trap on ERR, if set, is executed before the shell exits.
# Because we show the $LINENO, we can;t create a function otherwise the line number would be not correct
trap 'echo_err ""; echo_err "Command error on line ($0:$LINENO)"; exit 1' ERR