#!/usr/bin/env bash
# The shebang is for the IDE
# Shebang is not needed as the script is not executed but sourced
# but we use it to get the IDE file type

# Bashrc: Bash runtime configuration
# ~/.bashrc: executed by bash(1) for interactive shells.
# User dependent .bashrc file
#
# Called:
# * when the shell is interactive (ie without the `c` option)
# * by the login shell: ~/.profile (why? terminal is not started as an interactive shell)
#

# Avoid recursion due to script
# If we are not running interactively, we return
# Why? Otherwise we will have a recursion:
# * with script (due to the shebang starting bash)
# * and function (the prompt function such as `__git_ps1 " (%s)")
[[ "$-" != *i* ]] && return
echo ".bashrc called by ${0} sourced by ${BASH_SOURCE[1]}" >/dev/tty

# No strict mode. We want the errors otherwise we may quit and not go in an interactive session.
# Don't set that: set -Eeuo pipefail

# To the extent possible under law, the author(s) have dedicated all
# copyright and related and neighboring rights to this software to the
# public domain worldwide. This software is distributed without any warranty.
# You should have received a copy of the CC0 Public Domain Dedication along
# with this software.
# If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.

# base-files version 4.3-3

# The latest version as installed by the Cygwin Setup program can
# always be found at /etc/defaults/etc/skel/.bashrc

# Modifying /etc/skel/.bashrc directly will prevent
# setup from updating it.


# Shell Options
#
# See man bash for more options...
#
# Don't wait for job termination notification
# set -o notify
#
# Don't use ^D to exit
# set -o ignoreeof
#
# Use case-insensitive filename globbing
shopt -s nocaseglob

#
# Make bash append rather than overwrite the history on disk
# shopt -s histappend
#
# When changing directory small typos can be ignored by bash
# for example, cd /vr/lgo/apache would find /var/log/apache
shopt -s cdspell

# Programmable completion enhancements are enabled via
# /etc/profile.d/bash_completion.sh when the package bash_completion
# is installed.  Any completions you add in ~/.bash_completion are
# sourced last.


#
# Whenever displaying the prompt, write the previous line to disk
# export PROMPT_COMMAND="history -a"

# Aliases
#
# Some people use a different file for aliases
# if [ -f "${HOME}/.bash_aliases" ]; then
#   source "${HOME}/.bash_aliases"
# fi
#
# Some example alias instructions
# If these are enabled they will be used instead of any instructions
# they may mask.  For example, alias rm='rm -i' will mask the rm
# application.  To override the alias instruction use a \ before, ie
# \rm will call the real rm not the alias.
#
# Interactive operation...
# alias rm='rm -i'
# alias cp='cp -i'
# alias mv='mv -i'
#
# Default to human readable figures
alias df='df -h'
alias du='du -h'
#
# Misc :)
# alias less='less -r'                          # raw control characters
# alias whence='type -a'                        # where, of a sort
# alias grep='grep --color'                     # show differences in colour
# alias egrep='egrep --color=auto'              # show differences in colour
# alias fgrep='fgrep --color=auto'              # show differences in colour
#


# Umask
#
# /etc/profile sets 022, removing write perms to group + others.
# Set a more restrictive umask: i.e. no exec perms for others:
# umask 027
# Paranoid: neither group nor others have any perms:
# umask 077

#####################
# Add Bash Library
#####################
export BASHLIB_DIR=$HOME/code/bash-lib/lib
# idempotent (why for whatever reason, idea calls profile 2 times when starting its terminal)
if [[ ":$PATH:" != *":$BASHLIB_DIR:"* ]]; then
  export PATH=$BASHLIB_DIR:$PATH
fi

export BASHLIB_ECHO_LEVEL=3 # info level


#####################
# Executable: Add the bin
#####################
export PATH="$HOME/bin:$PATH"
# set PATH so it includes user's private bin if it exists
# idempotent (why for whatever reason, idea calls profile 2 times when starting its terminal)
if [ -d "$HOME/bin" ] && [[ ":$PATH:" != *":$HOME/bin:"* ]]; then
    export PATH="$HOME/bin:$PATH"
fi

# set PATH so it includes user's private bin if it exists
# idempotent (why for whatever reason, idea calls profile 2 times when starting its terminal)
if [ -d "$HOME/.local/bin" ] && [[ ":$PATH:" != *":$HOME/.local/bin:"* ]] ; then
    export PATH="$HOME/.local/bin:$PATH"
fi



#################################################
# Add the krew bin
# Krew is a plugin package manager
# https://krew.sigs.k8s.io/docs/user-guide/setup/install/
##################################################
KREW_BIN=${KREW_ROOT:-$HOME/.krew}/bin
# idempotent (why for whatever reason, idea calls profile 2 times when starting its terminal)
if [ -d "$KREW_BIN" ] && [[ ":$PATH:" != *":$KREW_BIN:"* ]]; then
  export PATH="$KREW_BIN:$PATH"
fi

#####################
# Editor
#####################
export EDITOR=nvim


##############################
# Secrets
##############################
# On Wsl, create the env on Windows and add it to `WSLENV`
# example: WSLENV=WT_SESSION:WT_PROFILE_ID:SSH_AUTH_SOCK:HCLOUD_TOKEN
SECRET_PATH=$HOME/.bashrc-secret
if [ -f "$SECRET_PATH" ]; then
 # shellcheck disable=SC1090
 source "$SECRET_PATH"
fi


##############################
# Cygwin
##############################
# Cygwin or not
export CYGWIN=0
if [[ $(uname -a) =~ "CYGWIN" ]]; then
  CYGWIN=1
fi

##############################
# Load sub bashrc script
##############################
if [ -d ~/.bashrc.d ]; then
  # All file loaded in a directory should have a sh extension
  # This is how /etc/profile also work
  for file in ~/.bashrc.d/*.sh; do
    # shellcheck disable=SC1090
    [ -r "$file" ] && source "$file"
  done
  unset file
fi

#############################
# Set the tab title
#############################
# Doc: https://learn.microsoft.com/en-us/windows/terminal/tutorials/tab-title
# echo -ne "\033]0;New Title\a"
# trap 'echo -ne "\e]0;$BASH_COMMAND\007"' DEBUG

